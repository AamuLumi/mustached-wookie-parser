### Syntax of a file : 

<html>

<head>
    <script src="js/jquery-1.11.2.min.js"></script>
    <link rel="stylesheet" type="text/css" href="css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="css/documentation.css">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Code Example</title>
</head>

<body>
    <div class="container">
        <div class="page-title">my-file.c</div>
        <div class="mainContent row">
            <div class="col-lg-1 lineNumber"></div>
                <div class="col-lg-11">
                    <div class="code-style">INSERT CODE HERE</div>
                </div>
            </div>
        </div>
    </div>
    <script src="js/documentationScript.js"></script>
</body>

</html>

### All code must be write between these tags :
    <div class="code-style">code here</div>

### Basic tags :

+ <directive>#preprocessingdirective arguments </directive>
    + Ex : <directive>#include &lt;stdio.h&gt;</directive>
    + If possible : <directive>#include</directive> <include_value>&lt;stdio.h&gt;</include_value>
        and       : <directive>#define</directive> <identifier>CONSTANT</identifier> <value>1</value>

+ <comment>// A comment</comment>
+ <comment>/* Multilines 
              comments */<comment>
              
+ <type>int</type>
+ etc.

+ <identifier>myFunction</identifier>
+ <identifier>myVariable</identifier>

+ <keyword>if</keyword>
+ <keyword>for</keyword>
+ etc.

+ <value>42</value>
+ <value>64</value>
+ etc.

+ <string>"this is a string"</string> OR <value>"this is a string"</value>
+ <string>"another string"</string>
+ etc.

+ All \n replaced by <br>
+ All < replaced by &lt;
+ All > replaced by &gt;

### Special tags :

## In function or condition or etc., use <div class="bloc">the bloc to indent</div> to add indentation to a bloc. (Possibility : use { and } symbol to place theses tags) (add the img at the beginning of the line before the bracket)

Ex : 

<img class="code-expander" src="img/collapse.png">
if(a==b) {
<div class="bloc">
    return 42;
</div>
}

## In declaration of function or variable, use <declaration>. (Possibility : use grammar analyze to detect it)

Ex : <declaration>int <identifier class="declaration">myFunction</identifier>(int a)</declaration>{
        <declaration>char <identifier class="declaration">myVariable</identifier></declaration>;

## Dedicated comments : /** .. */ Recognize it. There's lot of functionalities to implement with it. 